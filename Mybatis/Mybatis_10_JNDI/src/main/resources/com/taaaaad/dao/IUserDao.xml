<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.taaaaad.dao.IUserDao">
    <!-- 配置 查询结果的列名和实体类名之间的对应关系 -->
    <resultMap id="userMap" type="User">
        <!-- 配置主键字段对应 -->
        <id property="userId" column="id"></id>
        <!-- 配置非主键的对应 -->
        <result property="userName" column="username"></result>
        <result property="userAddress" column="address"></result>
        <result property="userSex" column="sex"></result>
        <result property="userBirthday" column="birthday"></result>
    </resultMap>
    <!-- 查询所有 -->
    <select id="findAll" resultMap="userMap">
        select * from user
    </select>

    <!-- 保存用户 -->
    <insert id="saveUser" parameterType="user">
        <!-- 配置插入操作后获取插入数据ID -->
        <selectKey keyProperty="userId" keyColumn="id" resultType="int" order="AFTER">
            select last_insert_id();
        </selectKey>
        insert into user(username, address, sex, birthday) values(#{userName}, #{userAddress}, #{userSex}, #{userBirthday});
    </insert>

    <!-- 更新用户 -->
    <update id="updateUser" parameterType="User">
        update user set username = #{userName}, address = #{userAddress}, sex = #{userSex}, birthday = #{userBirthday} where id = #{userId}
    </update>

    <!-- 删除用户操作 -->
    <delete id="deleteUser" parameterType="Integer">
        delete from user where id = #{userId}
    </delete>
    
    <!-- 根据ID查询用户 -->
    <select id="findById" parameterType="int" resultMap="userMap">
        select * from user where id = #{userId}
    </select>

    <!-- 根据名称模糊查询用户信息 -->
    <select id="findByName" parameterType="String" resultMap="userMap">
        <!--占位符 -->
        select * from user where username like #{username}
        <!-- 支持另外一种写法 字符串拼接 -->
    <!--select * from user where username like '%${value}%'-->
    </select>

    <!-- 获取总用户数 -->
    <select id="findTotal" resultType="int">
        select count(id) from user
    </select>

    <!-- 根据QueryVo 的条件获取用户 -->
    <select id="findUserByVo" parameterType="com.taaaaad.domain.QueryVo" resultMap="userMap">
        select * from user where username like #{user.userName}
    </select>
</mapper>