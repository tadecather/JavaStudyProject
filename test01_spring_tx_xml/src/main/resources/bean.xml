<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        https://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/tx
        https://www.springframework.org/schema/tx/spring-tx.xsd
        http://www.springframework.org/schema/aop
        https://www.springframework.org/schema/aop/spring-aop.xsd">

    <!-- 配置账户持久层 -->
    <bean id="accountDao" class="com.taaaaad.dao.impl.AccountDaoImpl">
<!--        <property name="jdbcTemplate" ref="jdbcTemplate"></property>-->
        <property name="dataSource" ref="dataSource"></property>
    </bean>

    <bean id="accountService" class="com.taaaaad.service.impl.AccountServiceImpl">
        <property name="accountDao" ref="accountDao"></property>
    </bean>

    <!--配置数据源-->
    <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="com.mysql.jdbc.Driver"></property>
        <property name="url" value="jdbc:mysql://localhost:3306/worktest"></property>
        <property name="username" value="test"></property>
        <property name="password" value="test1234"></property>
    </bean>

    <!-- spring 中基于XML的声明事务控制
        1. 配置事务管理器
        2. 配置事务的通知
            此时需要导入事务的约束 tx 名称空间和约束
            使用 tx:advice 配置事务通知
                属性
                    id: 给事务通知起一个唯一ID
                    transaction-manager : 给事务通知提供一个事务管理器引用
        3. 配置 AOP 通用切入点表达式
        4. 建立事务通知和切入点表达式的关系
        5. 配置事务的属性 在事务通知 tx:advice 标签中配置

    -->

    <!-- 配置事务管理器-->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"></property>
    </bean>

    <!-- 配置事务的通知-->
    <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <!-- 配置事务的属性
        isolation 用于指定事务的隔离级别 默认值是 DEFAULT 表示使用数据库的默认隔离级别
        propagation 用于指定事务的传播行为 默认是 REQUIRED 表示一定会有事务 增删改的选择 查询方法可以选择 SUPPORTS
        read-only 用于指定事务是否可读 只有查询方法设置为 true 默认值设置为 False 表示读写
        timeout 用于指定事务的超时默认是 -1 如果有值 以秒为单位
        rollback-for  用于指定一个异常 产生该异常时回滚 产生其他异常时事务不回滚 没有默认值表示任何异常都回滚
        no-rollback-for 用于指定一个异常 产生该异常时 事务不回滚 产生其他异常时 事务回滚  没有默认值表示任何异常都回滚
        -->
        <tx:attributes>
            <tx:method name="*" propagation="REQUIRED" read-only="false"/>
            <tx:method name="find*" propagation="SUPPORTS" read-only="false"/>
        </tx:attributes>
    </tx:advice>

    <!-- 配置 AOP -->
    <aop:config>
        <!-- 配置切入点表达式-->
        <aop:pointcut id="pt1" expression="execution(* com.taaaaad.service.impl.*.*(..))"/>
        <!-- 建立事务通知和切入点表达式之间的关系-->
        <aop:advisor advice-ref="txAdvice" pointcut-ref="pt1"></aop:advisor>
    </aop:config>







</beans>